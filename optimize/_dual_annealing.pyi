"""
This type stub file was generated by pyright.
"""

from scipy._typing import Untyped

class VisitingDistribution:
    TAIL_LIMIT: float
    MIN_VISIT_BOUND: float
    rand_gen: Untyped
    lower: Untyped
    upper: Untyped
    bound_range: Untyped
    def __init__(self, lb, ub, visiting_param, rand_gen) -> None:
        ...
    
    def visiting(self, x, step, temperature) -> Untyped:
        ...
    
    def visit_fn(self, temperature, dim) -> Untyped:
        ...
    


class EnergyState:
    MAX_REINIT_COUNT: int
    ebest: Untyped
    current_energy: Untyped
    current_location: Untyped
    xbest: Untyped
    lower: Untyped
    upper: Untyped
    callback: Untyped
    def __init__(self, lower, upper, callback: Untyped | None = ...) -> None:
        ...
    
    def reset(self, func_wrapper, rand_gen, x0: Untyped | None = ...):
        ...
    
    def update_best(self, e, x, context) -> Untyped:
        ...
    
    def update_current(self, e, x):
        ...
    


class StrategyChain:
    emin: Untyped
    xmin: Untyped
    energy_state: Untyped
    acceptance_param: Untyped
    visit_dist: Untyped
    func_wrapper: Untyped
    minimizer_wrapper: Untyped
    not_improved_idx: int
    not_improved_max_idx: int
    temperature_step: int
    K: Untyped
    def __init__(self, acceptance_param, visit_dist, func_wrapper, minimizer_wrapper, rand_gen, energy_state) -> None:
        ...
    
    def accept_reject(self, j, e, x_visit):
        ...
    
    energy_state_improved: bool
    def run(self, step, temperature) -> Untyped:
        ...
    
    def local_search(self) -> Untyped:
        ...
    


class ObjectiveFunWrapper:
    func: Untyped
    args: Untyped
    nfev: int
    ngev: int
    nhev: int
    maxfun: Untyped
    def __init__(self, func, maxfun: float = ..., *args) -> None:
        ...
    
    def fun(self, x) -> Untyped:
        ...
    


class LocalSearchWrapper:
    LS_MAXITER_RATIO: int
    LS_MAXITER_MIN: int
    LS_MAXITER_MAX: int
    func_wrapper: Untyped
    kwargs: Untyped
    jac: Untyped
    hess: Untyped
    hessp: Untyped
    minimizer: Untyped
    lower: Untyped
    upper: Untyped
    def __init__(self, search_bounds, func_wrapper, *args, **kwargs) -> None:
        ...
    
    def local_search(self, x, e) -> Untyped:
        ...
    


def dual_annealing(func, bounds, args=..., maxiter: int = ..., minimizer_kwargs: Untyped | None = ..., initial_temp: float = ..., restart_temp_ratio: float = ..., visit: float = ..., accept: float = ..., maxfun: float = ..., seed: Untyped | None = ..., no_local_search: bool = ..., callback: Untyped | None = ..., x0: Untyped | None = ...) -> Untyped:
    ...

