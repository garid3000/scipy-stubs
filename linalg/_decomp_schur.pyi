"""
This type stub file was generated by pyright.
"""

import numpy as np
import numpy.typing as npt
from collections.abc import Callable
from typing import Literal, TypeAlias, overload

__all__ = ["rsf2csf", "schur"]
_Array_fc_2d: TypeAlias = np.ndarray[tuple[int, int], np.dtype[np.inexact[npt.NBitBase]]]
_Array_c_2d: TypeAlias = np.ndarray[tuple[int, int], np.dtype[np.complexfloating[npt.NBitBase, npt.NBitBase]]]
@overload
def schur(a: npt.ArrayLike, output: Literal["real", "complex"] = ..., lwork: int | None = ..., overwrite_a: bool = ..., sort: None = ..., check_finite: bool = ...) -> tuple[_Array_fc_2d, _Array_fc_2d]:
    ...

@overload
def schur(a: npt.ArrayLike, output: Literal["real", "complex"] = ..., lwork: int | None = ..., overwrite_a: bool = ..., *, sort: Literal["lhp", "rhp", "iuc", "ouc"] | Callable[[float, float], bool], check_finite: bool = ...) -> tuple[_Array_fc_2d, _Array_fc_2d, int]:
    ...

def rsf2csf(T: npt.ArrayLike, Z: npt.ArrayLike, check_finite: bool = ...) -> tuple[_Array_c_2d, _Array_c_2d]:
    ...

