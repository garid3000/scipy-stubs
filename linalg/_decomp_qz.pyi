"""
This type stub file was generated by pyright.
"""

import numpy as np
import numpy.typing as npt
from collections.abc import Callable
from typing import Literal, TypeAlias

__all__ = ["ordqz", "qz"]
_Array_fc_1d: TypeAlias = np.ndarray[tuple[int], np.dtype[np.inexact[npt.NBitBase]]]
_Array_fc_2d: TypeAlias = np.ndarray[tuple[int, int], np.dtype[np.inexact[npt.NBitBase]]]
def qz(A: npt.ArrayLike, B: npt.ArrayLike, output: Literal["real", "complex"] = ..., lwork: int | None = ..., sort: None = ..., overwrite_a: bool = ..., overwrite_b: bool = ..., check_finite: bool = ...) -> tuple[_Array_fc_2d, _Array_fc_2d, _Array_fc_2d, _Array_fc_2d]:
    ...

def ordqz(A: npt.ArrayLike, B: npt.ArrayLike, sort: Literal["lhp", "rhp", "iuc", "ouc"] | Callable[[float, float], bool] = ..., output: Literal["real", "complex"] = ..., overwrite_a: bool = ..., overwrite_b: bool = ..., check_finite: bool = ...) -> tuple[_Array_fc_2d, _Array_fc_2d, _Array_fc_1d, _Array_fc_1d, _Array_fc_2d, _Array_fc_2d]:
    ...

