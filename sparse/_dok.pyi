"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable
from typing_extensions import Self, override
from scipy._typing import Untyped
from ._base import _spbase, sparray
from ._index import IndexMixin
from ._matrix import spmatrix

__all__ = ["dok_array", "dok_matrix", "isspmatrix_dok"]
class _dok_base(_spbase, IndexMixin, dict[tuple[int, ...], Untyped]):
    dtype: Untyped
    def __init__(self, arg1: Untyped, shape: Untyped | None = ..., dtype: Untyped | None = ..., copy: bool = ..., *, maxprint: Untyped | None = ...) -> None:
        ...
    
    @override
    def update(self, val: Untyped):
        ...
    
    @override
    def setdefault(self, key: Untyped, default: Untyped | None = ..., /) -> Untyped:
        ...
    
    @override
    def __delitem__(self, key: Untyped, /) -> None:
        ...
    
    @override
    def __or__(self, other: Untyped, /):
        ...
    
    @override
    def __ror__(self, other: Untyped, /):
        ...
    
    @override
    def __ior__(self, other: Untyped, /) -> Self:
        ...
    
    @override
    def get(self, key, /, default: float = ...) -> Untyped:
        ...
    
    def conjtransp(self) -> Untyped:
        ...
    
    @classmethod
    @override
    def fromkeys(cls, iterable: Iterable[tuple[int, ...]], value: int = ..., /) -> Self:
        ...
    


class dok_array(_dok_base, sparray):
    ...


class dok_matrix(spmatrix, _dok_base):
    @property
    @override
    def shape(self) -> tuple[int, int]:
        ...
    
    @override
    def get_shape(self) -> tuple[int, int]:
        ...
    


def isspmatrix_dok(x: Untyped) -> bool:
    ...

