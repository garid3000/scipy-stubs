"""
This type stub file was generated by pyright.
"""

import numpy as np
import scipy.sparse as sp
from typing import Any, Literal
from scipy._typing import Untyped, UntypedArray

supported_dtypes: Untyped
def upcast(*args) -> Untyped:
    ...

def upcast_char(*args) -> Untyped:
    ...

def upcast_scalar(dtype, scalar) -> Untyped:
    ...

def downcast_intp_index(arr) -> Untyped:
    ...

def to_native(A) -> Untyped:
    ...

def getdtype(dtype, a: Untyped | None = ..., default: Untyped | None = ...) -> Untyped:
    ...

def getdata(obj, dtype: Untyped | None = ..., copy: bool = ...) -> UntypedArray:
    ...

def get_index_dtype(arrays=..., maxval: Untyped | None = ..., check_contents: bool = ...) -> Untyped:
    ...

def get_sum_dtype(dtype: np.dtype[np.generic]) -> np.dtype[np.generic]:
    ...

def isscalarlike(x) -> bool:
    ...

def isintlike(x) -> bool:
    ...

def isshape(x, nonneg: bool = ..., *, allow_1d: bool = ...) -> bool:
    ...

def issequence(t) -> bool:
    ...

def ismatrix(t) -> bool:
    ...

def isdense(x) -> bool:
    ...

def validateaxis(axis) -> None:
    ...

def check_shape(args, current_shape: Untyped | None = ..., *, allow_1d: bool = ...) -> tuple[int, ...]:
    ...

def check_reshape_kwargs(kwargs) -> Untyped:
    ...

def is_pydata_spmatrix(m) -> bool:
    ...

def convert_pydata_sparse_to_scipy(arg: Any, target_format: Literal["csc", "csr"] | None = ..., accept_fv: Any = ...) -> Any | sp.spmatrix:
    ...

def matrix(*args, **kwargs) -> Untyped:
    ...

def asmatrix(data, dtype: Untyped | None = ...) -> Untyped:
    ...

